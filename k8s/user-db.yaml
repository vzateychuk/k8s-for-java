apiVersion: v1
kind: Service
metadata:
  name: userdb-srv
  namespace: vez
  labels:
    app: userdb-srv
spec:
  selector:
    app: userdb
  type: ClusterIP
  clusterIP: 10.110.61.113
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: userdb
  namespace: vez
spec:
  selector:
    matchLabels:
      app: userdb # has to match .spec.template.metadata.labels
  serviceName: "postgre"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: userdb # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: userdb
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: user-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-secret
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: user-cfg
                  key: user_db_name
            - name: PGDATA
              value: /data/pgdata
          volumeMounts:
            - name: user-vol
              mountPath: /data
            # db-initialization scripts will run as soon as container starts
            - name: dbinit
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        # see 'Initialization scripts' https://hub.docker.com/_/postgres
        - name: dbinit
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: user-cfg
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "users-schema.sql"
                path: "10_users-schema.sql"
              - key: "users-data.sql"
                path: "20_users-data.sql"
  volumeClaimTemplates:
    - metadata:
        name: user-vol
        namespace: vez
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: hostpath
        resources:
          requests:
            storage: 250Mi